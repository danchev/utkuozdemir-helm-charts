apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "plex.fullname" . }}
  labels:
    {{- include "plex.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "plex.fullname" . }}
  selector:
    matchLabels:
      {{- include "plex.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "plex.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
    {{- with .Values.plex.hostname }}
      hostname: {{ . }}
    {{- end }}
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "plex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /config
              name: config
            - mountPath: /transcode
              name: transcode
          envFrom:
            - configMapRef:
                name: {{ include "plex.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: plex
              containerPort: 32400
              protocol: TCP
            - containerPort: 3005
              hostPort: 3005
              protocol: TCP
            - containerPort: 8324
              hostPort: 8324
              protocol: TCP
            - containerPort: 32469
              hostPort: 32469
              protocol: TCP
            - containerPort: 1900
              hostPort: 1900
              protocol: UDP
            - containerPort: 32410
              hostPort: 32410
              protocol: UDP
            - containerPort: 32412
              hostPort: 32412
              protocol: UDP
            - containerPort: 32413
              hostPort: 32413
              protocol: UDP
            - containerPort: 32414
              hostPort: 32414
              protocol: UDP
          readinessProbe:
            httpGet:
              path: /web/index.html
              port: plex
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
{{- if and .Values.data.persistence.enabled .Values.data.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.data.persistence.existingClaim }}
{{- else if not .Values.data.persistence.enabled }}
        - name: data
          emptyDir: {}
{{- end }}
{{- if and .Values.config.persistence.enabled .Values.config.persistence.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.config.persistence.existingClaim }}
{{- else if not .Values.config.persistence.enabled }}
        - name: config
          emptyDir: {}
{{- end }}
{{- if and .Values.transcode.persistence.enabled .Values.transcode.persistence.existingClaim }}
        - name: transcode
          persistentVolumeClaim:
            claimName: {{ .Values.transcode.persistence.existingClaim }}
{{- else if not .Values.transcode.persistence.enabled }}
        - name: transcode
          emptyDir: {}
{{- end }}
  volumeClaimTemplates:
{{- if and .Values.data.persistence.enabled (not .Values.data.persistence.existingClaim) }}
    - metadata:
        name: data
        labels:
          app: "{{ template "plex.name" . }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.data.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.data.persistence.size | quote }}
        {{ include "plex.data.storageClass" . }}
{{- end }}
{{- if and .Values.config.persistence.enabled (not .Values.config.persistence.existingClaim) }}
    - metadata:
        name: config
        labels:
          app: "{{ template "plex.name" . }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.config.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.config.persistence.size | quote }}
        {{ include "plex.config.storageClass" . }}
{{- end }}
{{- if and .Values.transcode.persistence.enabled (not .Values.transcode.persistence.existingClaim) }}
    - metadata:
        name: transcode
        labels:
          app: "{{ template "plex.name" . }}"
          release: {{ .Release.Name | quote }}
          heritage: {{ .Release.Service | quote }}
      spec:
        accessModes:
        {{- range .Values.transcode.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.transcode.persistence.size | quote }}
        {{ include "plex.transcode.storageClass" . }}
{{- end }}